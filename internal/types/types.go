// Code generated by goctl. DO NOT EDIT.
package types

type Codereq struct {
	Email string `json:"email"`
}

type Coderesp struct {
	Status int    `json:"status"`
	Code   string `json:"code"`
}

type Registerreq struct {
	Email string `json:"email"`
	Name  string `json:"name,optional"`
	Pass  string `json:"pass"`
	Code  string `json:"code"`
	Check string `json:"check"`
}

type Registerresp struct {
	Status      int    `json:"status"`
	Accesstoken string `json:"accessToken"`
	Expires     string `json:"expires"`
	Name        string `json:"name"`
}

type Loginreq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Loginresp struct {
	Status      int    `json:"int"`
	Name        string `json:"name"`
	AccessToken string `json:"accessToken"`
	Expires     string `json:"expires"`
}

type Updatepwdreq struct {
	Code     string `json:"code"`
	Check    string `json:"check"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Updatepwdresp struct {
	Status int `json:"status"`
}

type RefreshTokenreq struct {
	Email string `json:"email"`
}

type RefreshTokenresp struct {
	Status  int    `json:"status"`
	Name    string `json:"name"`
	Token   string `json:"token"`
	Expires string `json:"expires"`
}

type Pubkeyresp struct {
	Status int    `json:"status"`
	Pubkey string `json:"pubkey"`
}

type Baseinfor struct {
	Status int  `json:"status"`
	Info   Info `json:"info"`
}

type Info struct {
	AvatarLink string `json:"avatarLink"`
	UserName   string `json:"userName"`
	Profession string `json:"profession"`
	Usermail   string `json:"userMail"`
	Type       string `json:"type"`
}

type Settingbasereq struct {
	Name       string `json:"name"`
	Profession string `json:"profession,optional"`
	Type       string `json:"type,optional"`
}

type Settingbaseresp struct {
	Status int `json:"status"`
}

type Settingavareq struct {
}

type Settingavaresp struct {
	Status int `json:"status"`
}

type Articlereq struct {
	Arid      string `json:"arid"`
	Content   string `json:"content"`
	IsPublish bool   `json:"isPublish"`
}

type Articleresp struct {
	Status    int    `json:"status"`
	Arid      string `json:"arid"`
	IsPublish bool   `json:"isPublish"`
}

type Searchreq struct {
	Articlename string `json:"input"`
}

type Searchresp struct {
	Status      int       `json:"status"`
	Articlelist []Article `json:"list"`
}

type Article struct {
	Id          string `json:"id"`
	Title       string `json:"title"`
	Url         string `json:"url"`
	Description string `json:"description"`
	Likes       int    `json:"likes"`
	Reads       int    `json:"reads"`
	Pubtime     string `json:"pubTime"`
	Imglink     string `json:"imglink"`
}

type Getarticlereq struct {
}

type Getarticleresp struct {
	Status      int          `json:"status"`
	Articlelist []GetArticle `json:"list"`
}

type GetArticle struct {
	Id          string `json:"id"`
	Title       string `json:"title"`
	Url         string `json:"url"`
	Description string `json:"description"`
	Likes       int    `json:"likes"`
	Reads       int    `json:"reads"`
	Pubtime     string `json:"pubTime"`
	Imglink     string `json:"imglink"`
}

type Readarticlereq struct {
	Arid   string `form:"id"`
	Userid string `form:"user,optional"`
}

type Readarticleresp struct {
	Status  int    `json:"status"`
	Content string `json:"content"`
	Title   string `json:"title"`
	IsEdit  bool   `json:"isEdit"`
}

type Getardataresp struct {
	Status   int      `json:"status"`
	Bardata  []int64  `json:"barData"`
	Barlabel []string `json:"barLable"`
}

type Getsingledatareq struct {
	Id string `form:"id"`
}

type Getsingledataresp struct {
	Status    int      `json:"status"`
	LineData  []int64  `json:""lineData"`
	LineLable []string `json:"lineLable"`
}

type Tablenameresp struct {
	Status     int    `json:"status"`
	Chartlable string `json:"chartlable"`
}

type Myarlistreq struct {
	Input string `form:"input,optional"`
	Num   int    `form:"num,optional"`
}

type Myarlistresp struct {
	Status int    `json:"status"`
	List   []Arti `json:"list"`
}

type Arti struct {
	Id          string `json:"id"`
	Title       string `json:"title"`
	Url         string `json:"url"`
	Description string `json:"description"`
	Likes       int    `json:"likes"`
	Reads       int    `json:"reads"`
	Pubtime     string `json:"pubtime"`
	Imglink     string `json:"imglink"`
}

type Likearticlereq struct {
	Active bool   `json:"active"`
	Id     string `json:"id"`
}

type Likearticleresp struct {
	Status int `json:"status"`
}

type Getbarreq struct {
	Id   string `form:"id"`
	User string `form:"user,optional"`
}

type Getbarresp struct {
	Status  int       `json:"status"`
	Options []Eachbar `json:"options"`
}

type Eachbar struct {
	Icon          string `json:"icon"`
	Counts        int64  `json:"counts"`
	Active        bool   `json:"active"`
	ActiveIcon    string `json:"activeIcon"`
	DisActiveIcon string `json:"disactiveIcon"`
}

type Toolsresp struct {
	Status int    `json:"status"`
	Items  []Tool `json:"items"`
}

type Tool struct {
	Url   string `json:"url"`
	Title string `json:"title"`
	Img   string `json:"img, optional"`
}

type Getmylikesresp struct {
	Status    int  `json:"status"`
	Datalikes []Ar `json:"dataLikes"`
}

type Ar struct {
	ArticaName     string `json:"articaName"`
	ArticalLink    string `json:"articalLink"`
	ArticalImgLink string `json:"articalImgLink"`
	ArticalID      string `json:"articalID"`
}

type Infotableresp struct {
	Status int         `json:"status"`
	Tabs   []SingleTab `json:"tabs"`
}

type SingleTab struct {
	TabName       string `json:"tabName"`
	ComponentName string `json:"componentName"`
	TabUrl        string `json:"tabUrl"`
	TabIcon       string `json:"tabIcon"`
}

type Getdraftreq struct {
	Arid string `json:"arid"`
}

type Getdraftresp struct {
	Status    int    `json:"status"`
	Text      string `json:"text"`
	Id        string `json:"id"`
	IsPublish bool   `json:"isPublish"`
}

type AIreq struct {
	Temerature       float64  `json:"Temperature"`
	MaxLength        float64  `json:"MaxLength"`
	TopP             float64  `json:"TopP"`
	FrequencyPenalty float64  `json:"frequencyPenalty"`
	PresencePenalty  float64  `json:"presencePenalty"`
	Prompt           []string `json:"prompt"`
}

type AIresp struct {
	Status       int    `json:"status"`
	Chat         string `json:"chat"`
	FinishReason string `json:"finishreason"`
}
